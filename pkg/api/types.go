/*
Copyright (c) 2019 Red Hat, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// This file contains the types that the server uses to marshal and unmarshal JSON.

package api

// Error is the description of errors returned by the server.
type Error struct {
	// Reason is the human readable description of the error.
	Reason string `json:"reason,omitempty"`
}

// Test is the description of a test that will be passed back and forth between the test runner
// and the server.
type Test struct {
	// Binary is the test binary.
	Binary []byte `json:"binary,omitempty"`

	// Args is the collection of command line arguments that will be passed to the test binary.
	Args []string `json:"args,omitempty"`

	// Env is the collection of environment variables that will be passed to the test binary.
	Env map[string]string `json:"env,omitempty"`

	// Out is the output (stdout) generated by the execution of the test binary.
	Out []byte `json:"out,omitempty"`

	// Out are the errors (stderr) generated by the execution of the test binary.
	Err []byte `json:"err,omitempty"`

	// Code is the code returned by the execution of the test binary.
	Code int `json:"code,omitempty"`
}
